#!/usr/bin/env python
import numpy as np
import rbf.basis
import matplotlib.pyplot as plt
import rbf.halton
import rbf.interpolant
import modest
import logging
logging.basicConfig(level=logging.DEBUG)

#np.random.seed(2)
N = 100
sigma = 0.2 + 0.1*np.random.random(N)
weight = 1.0/sigma
#weight = np.ones(N)

x = 4*rbf.halton.halton(N)
#x = 4*np.random.random((N,1))
#x = np.linspace(0.0,4.0,N)[:,None]
#x = 4*rbf.halton.halton(N)
y = np.sin(x[:,0])
noise = np.random.normal(np.zeros(N),sigma)
y += noise

plt.errorbar(x,y,yerr=1/weight,fmt='bo')

xitp = np.linspace(0,4,10000)[:,None]
ytrue = np.sin(xitp)
plt.plot(xitp,ytrue,'k--')

#I = rbf.interpolant.RBFInterpolant(x,y,weight=weight,basis=rbf.basis.phs3,order=1,penalty=0.0)
I = rbf.interpolant.RBFInterpolant(x,y,weight=weight,order=2,basis=rbf.basis.phs1,penalty='gcv')
yitp = I(xitp)
plt.plot(xitp,yitp,'b-')



plt.show()

